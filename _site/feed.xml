<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/paradocs/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/paradocs/" rel="alternate" type="text/html" /><updated>2021-11-17T15:23:38-08:00</updated><id>http://localhost:4000/paradocs/feed.xml</id><title type="html">Test Rich Results</title><subtitle>Trying out SEO returns in Google page.</subtitle><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/paradocs/docs/jekyll/update/2021/11/17/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2021-11-17T10:37:56-08:00</published><updated>2021-11-17T10:37:56-08:00</updated><id>http://localhost:4000/paradocs/docs/jekyll/update/2021/11/17/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/paradocs/docs/jekyll/update/2021/11/17/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;Jekyll requires blog post files to be named according to the following format:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR-MONTH-DAY-title.MARKUP&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR&lt;/code&gt; is a four-digit number, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MONTH&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DAY&lt;/code&gt; are both two-digit numbers, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MARKUP&lt;/code&gt; is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;Tom&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &apos;Hi, Tom&apos; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="docs" /><category term="jekyll" /><category term="update" /><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry><entry><title type="html">Version 2.4.0 Release Notes</title><link href="http://localhost:4000/paradocs/2021/05/20/wdc-persist-cookies.html" rel="alternate" type="text/html" title="Version 2.4.0 Release Notes" /><published>2021-05-20T00:00:00-07:00</published><updated>2021-05-20T00:00:00-07:00</updated><id>http://localhost:4000/paradocs/2021/05/20/wdc-persist-cookies</id><content type="html" xml:base="http://localhost:4000/paradocs/2021/05/20/wdc-persist-cookies.html">&lt;p&gt;The WDC API has been updated to provide the function &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tableau.enableCookiePersistence&lt;/code&gt;. This function provides WDCs the ability to share cookies across multiple WDC connections within a single Tableau Desktop session.&lt;/p&gt;

&lt;p&gt;Once a WDC has made a call to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tableau.enableCookiePersistence&lt;/code&gt; function, any additional cookies created by WDCs in the current Tableau Desktop session will persist until the session ends.&lt;/p&gt;

&lt;p&gt;Prior to this change, if a workbook had multiple WDC connections to the same host, each WDC connection would act as an isolated web session, with isolated cookies. This meant that for a workbook with 3 WDC connections all connecting to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://example.com&lt;/code&gt; with authentication, signing in would be required 3 times, as the cookie generated from logging in on one of the connections would not be available to the other connections.&lt;/p&gt;

&lt;p&gt;Now, if a WDC triggers the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tableau.enableCookiePersistence&lt;/code&gt; function, all cookies generated in WDCs will persist until the Tableau Desktop session ends. This allows WDC connections to avoid re-authenticating when all the WDC connections are authenticating on the same host.&lt;/p&gt;

&lt;p&gt;As was the case prior to this change, cookies generated by WDCs are stored in memory, and are never saved to disk. Cookies will cease to exist once the Tableau Desktop process is closed.&lt;/p&gt;</content><author><name></name></author><summary type="html">The WDC API has been updated to provide the function tableau.enableCookiePersistence. This function provides WDCs the ability to share cookies across multiple WDC connections within a single Tableau Desktop session.</summary></entry><entry><title type="html">Web Data Connectors use QT WebEngine browser starting in Tableau 2019.4</title><link href="http://localhost:4000/paradocs/2019/11/05/wdc-webengine.html" rel="alternate" type="text/html" title="Web Data Connectors use QT WebEngine browser starting in Tableau 2019.4" /><published>2019-11-05T00:00:00-08:00</published><updated>2019-11-05T00:00:00-08:00</updated><id>http://localhost:4000/paradocs/2019/11/05/wdc-webengine</id><content type="html" xml:base="http://localhost:4000/paradocs/2019/11/05/wdc-webengine.html">&lt;p&gt;Prior to Tableau 2019.4, Web Data Connectors used an internal browser in Tableau called Qt WebKit. In Tableau 2019.4 and later, Web Data Connectors use Qt WebEngine (a Chromium-based browser). The Qt WebEngine is a significant upgrade over the previous browser and provides better support for HTML5 and modern JavaScript tools.&lt;/p&gt;

&lt;p&gt;Because of the change, users and developers of some WDCs might encounter issues. For more information, see &lt;a href=&quot;/paradocs/docs/wdc_webengine.html&quot;&gt;Troubleshoot WDC WebEngine Issues in Tableau 2019.4 and later&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In addition, the debugging process for WDCs has changed. Developers will now be able to use the &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools&quot; target=&quot;_blank&quot; ref=&quot;noopener&quot;&gt;Chrome DevTools&lt;/a&gt; for debugging. For  more information, see the &lt;a href=&quot;/paradocs/docs/wdc_debugging.html#debug-chrome&quot;&gt;Debugging a WDC in Tableau Desktop 2019.4 (and later)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you are curious to see what new features are available with the new Chromium-based browser in Tableau 2019.4, you can open the Web Data Connector dialog box in Tableau, and point to the HTML5 test site (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://html5test.com&lt;/code&gt;). Note that this test site is not a WDC. The HTML5Test is a web site that reports the browser’s compatibility with the HTML5 standards.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/paradocs/assets/html5test_wdc_WebEngine.png&quot; alt=&quot;HTML5test&quot; height=&quot;25%&quot; width=&quot;25%&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Prior to Tableau 2019.4, Web Data Connectors used an internal browser in Tableau called Qt WebKit. In Tableau 2019.4 and later, Web Data Connectors use Qt WebEngine (a Chromium-based browser). The Qt WebEngine is a significant upgrade over the previous browser and provides better support for HTML5 and modern JavaScript tools.</summary></entry><entry><title type="html">Version 2.3.1, 2.2.2 &amp;amp; 2.1.4 Patch Notes</title><link href="http://localhost:4000/paradocs/2019/02/12/updates-v2-libs.html" rel="alternate" type="text/html" title="Version 2.3.1, 2.2.2 &amp;amp; 2.1.4 Patch Notes" /><published>2019-02-12T00:00:00-08:00</published><updated>2019-02-12T00:00:00-08:00</updated><id>http://localhost:4000/paradocs/2019/02/12/updates-v2-libs</id><content type="html" xml:base="http://localhost:4000/paradocs/2019/02/12/updates-v2-libs.html">&lt;p&gt;In support of a future release of Tableau, we have released a new patch for the WDC API. The files can be found here:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://connectors.tableau.com/libs/tableauwdc-2.3.1.js
https://connectors.tableau.com/libs/tableauwdc-2.3.1.min.js
https://connectors.tableau.com/libs/tableauwdc-2.2.2.js
https://connectors.tableau.com/libs/tableauwdc-2.2.2.min.js
https://connectors.tableau.com/libs/tableauwdc-2.1.4.js
https://connectors.tableau.com/libs/tableauwdc-2.1.4.min.js

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The only change in the patch is that instead of redeclaring &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;window.tableau&lt;/code&gt; to point to webchannel objects, we are now explicitly copying over the needed &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tableau&lt;/code&gt; properties. This is required so that the original reference of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;window.tableau&lt;/code&gt; is not lost. Note this only affects customers who are using a version of Tableau with WDC WebEngine enabled (in a future release of Tableau).&lt;/p&gt;</content><author><name></name></author><summary type="html">In support of a future release of Tableau, we have released a new patch for the WDC API. The files can be found here: https://connectors.tableau.com/libs/tableauwdc-2.3.1.js https://connectors.tableau.com/libs/tableauwdc-2.3.1.min.js https://connectors.tableau.com/libs/tableauwdc-2.2.2.js https://connectors.tableau.com/libs/tableauwdc-2.2.2.min.js https://connectors.tableau.com/libs/tableauwdc-2.1.4.js https://connectors.tableau.com/libs/tableauwdc-2.1.4.min.js The only change in the patch is that instead of redeclaring window.tableau to point to webchannel objects, we are now explicitly copying over the needed tableau properties. This is required so that the original reference of window.tableau is not lost. Note this only affects customers who are using a version of Tableau with WDC WebEngine enabled (in a future release of Tableau).</summary></entry><entry><title type="html">Support for WDC Libraries to Change in Tableau 2019.1</title><link href="http://localhost:4000/paradocs/2018/11/12/wdc-supported-lib.html" rel="alternate" type="text/html" title="Support for WDC Libraries to Change in Tableau 2019.1" /><published>2018-11-12T00:00:00-08:00</published><updated>2018-11-12T00:00:00-08:00</updated><id>http://localhost:4000/paradocs/2018/11/12/wdc-supported-lib</id><content type="html" xml:base="http://localhost:4000/paradocs/2018/11/12/wdc-supported-lib.html">&lt;p&gt;Web Data Connectors (WDC) that use versions of the WDC client library (prior to v2.0.2) will display a warning in Tableau 2019.1.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Warning - This version of the Web Data Connector library is deprecated...&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you are using a Web Data Connector and see this warning message, contact the developer of the connector directly. In the future, a WDC that uses one of the specified libraries will not run, unless the developer updates the WDC to use a supported version of the library.&lt;/p&gt;

&lt;h3 id=&quot;versions-of-the-wdc-library-that-will-not-be-supported&quot;&gt;Versions of the WDC library that will not be supported&lt;/h3&gt;

&lt;p&gt;Starting in Tableau 2019.1, a WDC that uses one of the following versions of the Web Data Connector client library (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tableauwdc-x.x.x.js&lt;/code&gt;) will display the warning message that the library has been deprecated and will not be supported in Tableau 2019.4:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1.x (all versions)&lt;/li&gt;
  &lt;li&gt;2.0.0&lt;/li&gt;
  &lt;li&gt;2.0.1&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In Tableau 2019.4, any Web Data Connectors that uses one of the deprecated libraries will stop working.&lt;/p&gt;

&lt;h3 id=&quot;information-for-developers&quot;&gt;Information for developers&lt;/h3&gt;

&lt;p&gt;If you are a developer of a Web Data Connector, refer to the migration guide for the steps to upgrade from version 1.x, see &lt;a href=&quot;/paradocs\docs\wdc_upgrade&quot;&gt;Upgrading from WDC Version 1.x&lt;/a&gt;. To find and use the latest version of the Web Data Connector client library, see &lt;a href=&quot;/paradocs\docs\wdc_library_versions&quot;&gt;WDC Versions&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;the-reason-for-this-change&quot;&gt;The reason for this change&lt;/h3&gt;

&lt;p&gt;Web Data Connectors are JavaScript-based components written by third-party developers to build data connectors for Tableau. Web Data Connectors use an internal browser in Tableau called Qt WebKit. In Tableau 2019.4, Web Data Connectors will use Qt WebEngine (a Chromium-based browser), a significant upgrade over Tableau’s current browser. WDC developers will benefit from this upgrade with the ability to use modern JavaScript, and Chrome developer tools for debugging WDC code.&lt;/p&gt;

&lt;p&gt;The earlier versions of the Web Data Connector client library were not designed for use under Qt WebEngine. Therefore, Tableau will no longer support these versions in future releases.&lt;/p&gt;</content><author><name></name></author><summary type="html">Web Data Connectors (WDC) that use versions of the WDC client library (prior to v2.0.2) will display a warning in Tableau 2019.1.</summary></entry><entry><title type="html">WDC Spatial Data in Tableau 10.4</title><link href="http://localhost:4000/paradocs/2017/08/21/spatial-data-10-4.html" rel="alternate" type="text/html" title="WDC Spatial Data in Tableau 10.4" /><published>2017-08-21T00:00:00-07:00</published><updated>2017-08-21T00:00:00-07:00</updated><id>http://localhost:4000/paradocs/2017/08/21/spatial-data-10-4</id><content type="html" xml:base="http://localhost:4000/paradocs/2017/08/21/spatial-data-10-4.html">&lt;p&gt;With the release of Tableau 10.4, you can now connect directly to spatial data.  Using the new geometry value in the &lt;a href=&quot;/paradocs/docs/api_ref#webdataconnectorapi.datatypeenum.float&quot;&gt;tableau.dataType&lt;/a&gt; enum, you can send GeoJSON objects directly back to Tableau.&lt;/p&gt;

&lt;p&gt;This feature supports the following geoJson types:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Points and MultiPoints&lt;/li&gt;
  &lt;li&gt;Lines and MultiLines&lt;/li&gt;
  &lt;li&gt;Polygons and MultiPolygons&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Learn more about how to upgrade to Tableau 10.4 and about the new features available here: &lt;a href=&quot;https://www.tableau.com/new-features/10.4&quot;&gt;Get Tableau 10.4&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Learn more about GeoJSON here: &lt;a href=&quot;http://geojson.org/&quot;&gt;GeoJSON documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can use the following hosted API scripts to take advantage of this new feature:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://connectors.tableau.com/libs/tableauwdc-2.3.latest.js
https://connectors.tableau.com/libs/tableauwdc-2.3.latest.min.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">With the release of Tableau 10.4, you can now connect directly to spatial data. Using the new geometry value in the tableau.dataType enum, you can send GeoJSON objects directly back to Tableau.</summary></entry><entry><title type="html">Join Filtering and Tableau 10.2</title><link href="http://localhost:4000/paradocs/2017/02/28/join-filtering-tableau-10-2.html" rel="alternate" type="text/html" title="Join Filtering and Tableau 10.2" /><published>2017-02-28T00:00:00-08:00</published><updated>2017-02-28T00:00:00-08:00</updated><id>http://localhost:4000/paradocs/2017/02/28/join-filtering-tableau-10-2</id><content type="html" xml:base="http://localhost:4000/paradocs/2017/02/28/join-filtering-tableau-10-2.html">&lt;p&gt;With the release of Tableau 10.2 comes a new feature for multi-table connectors.
You can now use join filtering to filter the data from one table based on the data from another table.
This minimizes requests to your data source for improved data access speeds and reduced server loads.
For more information, see &lt;a href=&quot;/paradocs/docs/wdc_join_filtering&quot;&gt;Join Filtering&lt;/a&gt; in the documentation.&lt;/p&gt;

&lt;p&gt;Learn more about how to upgrade to Tableau 10.2 and about the new features available here: &lt;a href=&quot;https://www.tableau.com/new-features/10.2&quot;&gt;Get Tableau 10.2&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">With the release of Tableau 10.2 comes a new feature for multi-table connectors. You can now use join filtering to filter the data from one table based on the data from another table. This minimizes requests to your data source for improved data access speeds and reduced server loads. For more information, see Join Filtering in the documentation.</summary></entry><entry><title type="html">Tableau 10.1 is now available</title><link href="http://localhost:4000/paradocs/2016/11/02/tableau-10.1-now-available.html" rel="alternate" type="text/html" title="Tableau 10.1 is now available" /><published>2016-11-02T00:00:00-07:00</published><updated>2016-11-02T00:00:00-07:00</updated><id>http://localhost:4000/paradocs/2016/11/02/tableau-10.1-now-available</id><content type="html" xml:base="http://localhost:4000/paradocs/2016/11/02/tableau-10.1-now-available.html">&lt;p&gt;The latest version of the WDC is here and it comes with a host of new features:&lt;/p&gt;

&lt;h3 id=&quot;standard-connections&quot;&gt;Standard connections&lt;/h3&gt;

&lt;p&gt;Have you ever wanted to predefine joins in Tableau? Now you can! When you create a web data connector that gets data from multiple tables, you can pre-specify how you want to join
the tables in Tableau Desktop. The standard connections feature supports left and inner joins for tables. See the image above for a preview of standard connections in the simulator.&lt;/p&gt;

&lt;p&gt;For more information on how to create standard connections, read the &lt;a href=&quot;http://localhost:4000/docs/wdc_standard_connections&quot;&gt;documentation&lt;/a&gt; or view the sample connector &lt;a href=&quot;https://github.com/tableau/webdataconnector/tree/master/Examples&quot;&gt;on Github&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;progress-reporting&quot;&gt;Progress reporting&lt;/h3&gt;

&lt;p&gt;We’ve seen Tableau users create some incredibly sophisticated connectors for Tableau–but the more complex the connector and the more data you download, the more likely are to have to wait while Tableau downloads data from your connector. Now, you can do yourself (and your users!) a favor by adding progress reporting to your connectors. Send a progress message from your connector to Tableau Desktop with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tableau.reportProgress&lt;/code&gt; function. For more information, see the &lt;a href=&quot;http://tableau.github.io/webdataconnector/docs/api_ref.html#webdataconnectorapi.tableau.reportProgress&quot;&gt;API reference&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;upgrade-to-tableau-101&quot;&gt;Upgrade to Tableau 10.1&lt;/h3&gt;

&lt;p&gt;Learn more about how to upgrade to Tableau 10.1 and about the new features available here: &lt;a href=&quot;http://www.tableau.com/new-features/10.1&quot;&gt;Get Tableau 10.1&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">The latest version of the WDC is here and it comes with a host of new features:</summary></entry><entry><title type="html">Version 2.0.9 Patch Notes</title><link href="http://localhost:4000/paradocs/2016/09/22/version209.html" rel="alternate" type="text/html" title="Version 2.0.9 Patch Notes" /><published>2016-09-22T00:00:00-07:00</published><updated>2016-09-22T00:00:00-07:00</updated><id>http://localhost:4000/paradocs/2016/09/22/version209</id><content type="html" xml:base="http://localhost:4000/paradocs/2016/09/22/version209.html">&lt;h3 id=&quot;209-patch-notes&quot;&gt;2.0.9 Patch Notes&lt;/h3&gt;
&lt;p&gt;To go along with the release of Tableau version 10.0.1, we have also released a new patch of the WDC API. This can be found here:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://connectors.tableau.com/libs/tableauwdc-2.0.9.js
https://connectors.tableau.com/libs/tableauwdc-2.0.9.min.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The only change in this patch is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Bug Fix: Added missing platform properties to the WDC library so that they can be used in the Simulator.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;There are four platform properties available through the API:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;platformOS&lt;/li&gt;
  &lt;li&gt;platformVersion&lt;/li&gt;
  &lt;li&gt;platformEdition&lt;/li&gt;
  &lt;li&gt;platformBuildNumber&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These properties were available since the release of Tableau 10, but were not working in the Simulator until now.&lt;/p&gt;

&lt;p&gt;On a related note, we fixed a bug in Tableau Desktop 10.0.1 that caused the tableau.platformVersion to incorrectly show as “0.0.0”.
Now, the version is correctly displayed as “10.0.1”.&lt;/p&gt;</content><author><name></name></author><summary type="html">2.0.9 Patch Notes To go along with the release of Tableau version 10.0.1, we have also released a new patch of the WDC API. This can be found here:</summary></entry><entry><title type="html">Tableau 10.0 Release and WDC Updates</title><link href="http://localhost:4000/paradocs/2016/08/15/changes-to-WDC-github.html" rel="alternate" type="text/html" title="Tableau 10.0 Release and WDC Updates" /><published>2016-08-15T00:00:00-07:00</published><updated>2016-08-15T00:00:00-07:00</updated><id>http://localhost:4000/paradocs/2016/08/15/changes-to-WDC-github</id><content type="html" xml:base="http://localhost:4000/paradocs/2016/08/15/changes-to-WDC-github.html">&lt;h3 id=&quot;upgrade-to-tableau-100&quot;&gt;Upgrade to Tableau 10.0&lt;/h3&gt;
&lt;p&gt;You can now use connectors made with version 2.0 of the WDC API in Tableau! 
Learn more about how to upgrade to Tableau 10.0 and about the new features available here: &lt;a href=&quot;http://www.tableau.com/new-features/10.0&quot;&gt;Get Tableau 10&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;github-changes&quot;&gt;GitHub Changes&lt;/h3&gt;
&lt;p&gt;Version 2.0 of the WDC API is now the latest released version of the WDC API. 
Because of this, the dev branch of the WDC GitHub repository has been merged into master, and master now represents version 2.0.
You can still access earlier versions of the WDC SDK through our release tags on GitHub.&lt;/p&gt;

&lt;p&gt;There are a few ramifications of this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The hosted v1 samples are now deprecated (though we will continue to host them for some time to avoid any inconvenience).&lt;/li&gt;
  &lt;li&gt;The hosted v1 simulator has been removed from our github.io page.&lt;/li&gt;
  &lt;li&gt;Development for version 2.1 of the WDC SDK is now underway in the dev branch.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;To be clear, we still support the v1 samples and simulator.  These will continue to be usable (and found through our GitHub release tags). 
These samples and simulator are still helpful when developing v1 WDCs - for Tableau 9.3 and earlier.  WDC v1 documentation can be found &lt;a href=&quot;http://onlinehelp.tableau.com/v9.3/api/wdc/en-us/help.htm&quot;&gt;here&lt;/a&gt;.
But we are no longer hosting these, to keep our GitHub branches in sync with the current version of the API.&lt;/p&gt;

&lt;h3 id=&quot;208-patch-notes&quot;&gt;2.0.8 Patch Notes&lt;/h3&gt;
&lt;p&gt;We have also released a new patch of the WDC API. This can be found here:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://connectors.tableau.com/libs/tableauwdc-2.0.8.js
https://connectors.tableau.com/libs/tableauwdc-2.0.8.min.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here is a list of changes since the last released patch (2.0.5):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Bug Fix: authPurpose attribute was missing from the shim, resulting in this attribute not being accessible in the simulator.&lt;/li&gt;
  &lt;li&gt;Bug Fix: fixed two instances where context was not properly set.&lt;/li&gt;
  &lt;li&gt;Bug Fix: missing underscore typo fix.&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Upgrade to Tableau 10.0 You can now use connectors made with version 2.0 of the WDC API in Tableau! Learn more about how to upgrade to Tableau 10.0 and about the new features available here: Get Tableau 10.</summary></entry></feed>